// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Patients {
  id       Int         @id @default(autoincrement())
  phone    String      @unique
  name     String
  email    String      @unique
  gender   GendersType
  Schedule Schedule[]

  @@map("Patients")
}

model Doctors {
  id       Int        @id @default(autoincrement())
  name     String
  spec     String
  price    Int
  Schedule Schedule[]

  @@map("Doctors")
}

model Schedule {
  id   Int      @id @default(autoincrement())
  date String 

  time_from_id Int        
  time_from    TimeSample[] @relation(name:"time_from")

  time_to_id Int        
  time_to    TimeSample[] @relation(name:"time_to")
  is_free    Boolean    @default(false)

  patients_id Int
  patient     Patients @relation(fields: [patients_id], references: [id])

  doctors_id Int
  doctors    Doctors @relation(fields: [doctors_id], references: [id])
  type       Int

  @@map("Schedule")
}

model TimeSample {
  id   Int      @id @default(autoincrement())
  time DateTime @unique @db.Time

  ScheduleFrom Schedule[] @relation(name:"time_from")
  ScheduleTo   Schedule[]  @relation(name:"time_to")

  @@map("TimeSample")
}

model tasks {
  id Int @id @default(autoincrement())
  phone String 
  information String
  isActual Boolean @default(true)
  countCall Int 
  status StatusTask
  isDone Boolean @default(false)

  @@map("Tasks")
}


model calls{
  id Int @id @default(autoincrement())
  phone String
  idCallTask String
  status StatusCall
  result String
  idBulkId String


  @@map("Calls")
}

enum GendersType {
  male
  female
}
enum StatusTask {
  new
  process
  done
}
enum StatusCall {
  process
  done
}